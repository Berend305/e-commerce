name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build and Push Docker Image
      run: |
        docker build -t my-ecommerce-app:latest ./web
        docker tag my-ecommerce-app:latest ${{ secrets.DOCKER_USERNAME }}/my-ecommerce-app:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/my-ecommerce-app:latest

  deploy:
    name: Deploy to K3s via Bastion Host
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up SSH for Bastion Host
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        # Optionally, add the bastion host to known hosts to avoid host verification issues
        ssh-keyscan -H 192.168.151.244 >> ~/.ssh/known_hosts
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Test SSH connection to Bastion Host
      run: |
        # Test SSH connection to Bastion Host
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa berend305@192.168.151.244 "hostname"
      
    - name: Set up kubectl for k3s
      run: |
        mkdir -p $HOME/.kube
        echo "${{ secrets.K3S_KUBECONFIG }}" > $HOME/.kube/config
        chmod 600 $HOME/.kube/config

    - name: Deploy to K3s via Bastion Host
      run: |
        # Use SSH to connect to the bastion host and execute kubectl commands to deploy
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa berend305@192.168.151.244 "kubectl apply -f ./k3s/deployment.yaml && kubectl apply -f ./k3s/service.yaml"
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
