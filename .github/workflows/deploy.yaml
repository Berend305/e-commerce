name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: self-hosted

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        ini-file: production
        tools: composer

    - name: Install Dependencies
      run: composer install --no-progress --prefer-dist

    # Build and push Docker image
    - name: Build en Push Docker Image
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        docker build -t $DOCKER_USERNAME/ecommerce-web:latest ./web
        echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
        docker push $DOCKER_USERNAME/ecommerce-web:latest

    # Configure Kubernetes context
    - name: Configure Kubernetes Context
      env:
        KUBECONFIG_CONTENT: ${{ secrets.KUBECONFIG_CONTENT }}
      run: |
        mkdir -p $HOME/.kube
        echo "$KUBECONFIG_CONTENT" | base64 -d > $HOME/.kube/config
        chmod 600 $HOME/.kube/config

    # Deploy to Kubernetes
    - name: Deploy to k3s Cluster
      run: |
        kubectl apply -f k3s/secrets.yaml
        kubectl apply -f k3s/web-deployment.yaml
        kubectl apply -f k3s/db-deployment.yaml
        kubectl apply -f k3s/phpmyadmin-deployment.yaml

    # Wait for Pods to be Ready
    - name: Wait for Pods
      run: |
        kubectl wait --for=condition=ready pod -l app=ecommerce --timeout=300s
        kubectl wait --for=condition=ready pod -l app=ecommerce-db --timeout=300s

    # Get External IP
    - name: Get External IP
      id: get-ip
      run: |
        NODE_IP=$(kubectl get nodes -o jsonpath='{.items[0].status.addresses[?(@.type=="InternalIP")].address}')
        echo "WEB_SERVER_URL=http://$NODE_IP:30080" >> $GITHUB_ENV

    # Run Unit and Integration Tests
    - name: Run Tests
      env:
        WEB_SERVER_URL: ${{ env.WEB_SERVER_URL }}
      run: vendor/bin/phpunit --testdox
